<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
<!--  	 
 PROD_NO              NOT NULL NUMBER			prodNo
 PROD_NAME            NOT NULL VARCHAR2(100)	prodName
 PROD_DETAIL          VARCHAR2(200)				prodDetail
 MANUFACTURE_DAY      VARCHAR2(8)				manuDate
 PRICE                NUMBER(10)				price
 IMAGE_FILE      	  VARCHAR2(8)				fileName                                                                                                                                                                                                                                                                                                                                       VARCHAR2(100)
 REG_DATE 										regDate
  -->
 	
 	
	<resultMap id="productSelectMap" 		type="product">
		<result property="prodNo" 			column="prod_no" 			jdbcType="NUMERIC"/>
		<result property="prodName"			column="prod_name" 			jdbcType="VARCHAR" />
		<result property="prodDetail" 		column="prod_detail" 		jdbcType="VARCHAR" />
		<result property="manuDate" 		column="manufacture_day" 	jdbcType="VARCHAR" />
		<result property="price" 			column="price" 				jdbcType="NUMERIC" />
		<result property="fileName" 		column="image_file" 		jdbcType="VARCHAR" />
		<result property="regDate" 			column="reg_date" 			jdbcType="DATE" />
	</resultMap>
	
	<!-- SQL : INSERT -->
<!-- 	<insert 	id="addProduct"		parameterType="product" >
	 	INSERT
		INTO product( prod_no , prod_name , prod_detail , manufacture_day , price, image_file, reg_date) 
		VALUES	 (	seq_product_prod_no.NEXTVAL , #{prodName} , #{prodDetail:VARCHAR} , #{manuDate:VARCHAR} , 
							#{price:NUMERIC} , #{fileName:VARCHAR} , SYSDATE )
	 </insert> -->
	 
	 <insert id="addProduct" parameterType="product" useGeneratedKeys="true" keyProperty="prodNo">
		INSERT 
		INTO product (prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date) 
		VALUES
		(
		seq_product_prod_no.NEXTVAL, #{prodName:VARCHAR}, #{prodDetail:VARCHAR}, #{manuDate:VARCHAR}, #{price:NUMERIC}, #{fileName:VARCHAR}, SYSDATE
		)
		
	<!--keyProperty 데이터를 담을 칼럼명을 지정-->
		<selectKey keyProperty="prodNo" resultType="int" order="AFTER">
    	SELECT seq_product_prod_no.CURRVAL FROM DUAL
    	</selectKey> 
	</insert>
	 
	 <!-- 인서트 완료
 -->	 
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="int"	resultMap="productSelectMap">
		SELECT
		prod_no , prod_name , prod_detail , manufacture_day ,  price ,  image_file , reg_date 		
		FROM product 
		WHERE prod_no = #{value}
		ORDER BY prod_no
	 </select>
	 
	 <!-- SQL : UPDATE
	 prod_name=?,prod_detail=?,manufacture_day=?,price=? where prod_no=?
	 -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		prod_name 				= #{prodName:VARCHAR} ,
			prod_detail				= #{prodDetail:VARCHAR},
			manufacture_day 		= #{manuDate:VARCHAR} ,
			price					= #{price:NUMERIC} ,
			reg_date				= SYSDATE,
			image_file				= #{fileName:VARCHAR}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
	 
	 
	<!-- 	 SQL : SELECT LIST-->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT
	  									 prod_no , prod_name , prod_detail, price, manufacture_day, image_file
										FROM
										 product
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				prod_no like '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				prod_name like '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				price like '%'||#{searchKeyword}||'%'
													</if>
												</where>
											</if>
											ORDER BY prod_no )
											 inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	 <!-- 위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며.. (less than)
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  (이스케이프 문자)

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} ) -->
		
	
	<!--SQL : SELECT ROW Count	 -->
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT prod_no
				FROM product
					<if test="searchCondition != null">
						<where>
							<if test="searchCondition == 0 and searchKeyword !='' ">
					 			prod_no like '%'||#{searchKeyword}||'%'
							</if>
							<if test="searchCondition == 1 and searchKeyword !='' ">
						 		prod_name like '%'||#{searchKeyword}||'%'
							</if>
							<if test="searchCondition == 2 and searchKeyword !='' ">
						 		price like '%'||#{searchKeyword}||'%'
							</if>
						</where>
					</if> ) countTable						
	 </select>
</mapper>